package ExApp;


/**
* ExApp/_ExStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from Ex.idl
* lunes 7 de noviembre de 2011 20H31' CST
*/

public class _ExStub extends org.omg.CORBA.portable.ObjectImpl implements ExApp.Ex
{

  public String[] Login (String user, String pwd)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("Login", true);
                $out.write_string (user);
                $out.write_string (pwd);
                $in = _invoke ($out);
                String $result[] = ExApp.vectorHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return Login (user, pwd        );
            } finally {
                _releaseReply ($in);
            }
  } // Login

  public String[] ObtenerUsuarioPorID (int id, byte estado)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("ObtenerUsuarioPorID", true);
                $out.write_long (id);
                $out.write_octet (estado);
                $in = _invoke ($out);
                String $result[] = ExApp.vectorHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return ObtenerUsuarioPorID (id, estado        );
            } finally {
                _releaseReply ($in);
            }
  } // ObtenerUsuarioPorID

  public String[][] ObtenerUsuarioPorTarea (int id)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("ObtenerUsuarioPorTarea", true);
                $out.write_long (id);
                $in = _invoke ($out);
                String $result[][] = ExApp.matrizHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return ObtenerUsuarioPorTarea (id        );
            } finally {
                _releaseReply ($in);
            }
  } // ObtenerUsuarioPorTarea

  public boolean ModificarUsuarioPwd (int id, String oldPwd, String newPwd)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("ModificarUsuarioPwd", true);
                $out.write_long (id);
                $out.write_string (oldPwd);
                $out.write_string (newPwd);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return ModificarUsuarioPwd (id, oldPwd, newPwd        );
            } finally {
                _releaseReply ($in);
            }
  } // ModificarUsuarioPwd

  public String[][] ObtenerMisProyectos (int id, boolean admin)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("ObtenerMisProyectos", true);
                $out.write_long (id);
                $out.write_boolean (admin);
                $in = _invoke ($out);
                String $result[][] = ExApp.matrizHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return ObtenerMisProyectos (id, admin        );
            } finally {
                _releaseReply ($in);
            }
  } // ObtenerMisProyectos

  public String[][] ObtenerMisTareas (int id, boolean admin)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("ObtenerMisTareas", true);
                $out.write_long (id);
                $out.write_boolean (admin);
                $in = _invoke ($out);
                String $result[][] = ExApp.matrizHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return ObtenerMisTareas (id, admin        );
            } finally {
                _releaseReply ($in);
            }
  } // ObtenerMisTareas

  public boolean Crear (String[] datos, byte tabla)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("Crear", true);
                ExApp.vectorHelper.write ($out, datos);
                $out.write_octet (tabla);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return Crear (datos, tabla        );
            } finally {
                _releaseReply ($in);
            }
  } // Crear

  public String[][] Obtener (String busqueda, byte estado, byte tabla)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("Obtener", true);
                $out.write_string (busqueda);
                $out.write_octet (estado);
                $out.write_octet (tabla);
                $in = _invoke ($out);
                String $result[][] = ExApp.matrizHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return Obtener (busqueda, estado, tabla        );
            } finally {
                _releaseReply ($in);
            }
  } // Obtener

  public boolean Modificar (int id, String[] datos, byte tabla)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("Modificar", true);
                $out.write_long (id);
                ExApp.vectorHelper.write ($out, datos);
                $out.write_octet (tabla);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return Modificar (id, datos, tabla        );
            } finally {
                _releaseReply ($in);
            }
  } // Modificar

  public boolean Restaurar (int id, byte tabla)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("Restaurar", true);
                $out.write_long (id);
                $out.write_octet (tabla);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return Restaurar (id, tabla        );
            } finally {
                _releaseReply ($in);
            }
  } // Restaurar

  public boolean Eliminar (int id, boolean permanente, byte tabla)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("Eliminar", true);
                $out.write_long (id);
                $out.write_boolean (permanente);
                $out.write_octet (tabla);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return Eliminar (id, permanente, tabla        );
            } finally {
                _releaseReply ($in);
            }
  } // Eliminar

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:ExApp/Ex:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _ExStub
