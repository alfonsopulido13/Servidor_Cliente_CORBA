package ExApp;


/**
* ExApp/_ExImplBase.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from Ex.idl
* lunes 7 de noviembre de 2011 20H31' CST
*/

public abstract class _ExImplBase extends org.omg.CORBA.portable.ObjectImpl
                implements ExApp.Ex, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors
  public _ExImplBase ()
  {
  }

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("Login", new java.lang.Integer (0));
    _methods.put ("ObtenerUsuarioPorID", new java.lang.Integer (1));
    _methods.put ("ObtenerUsuarioPorTarea", new java.lang.Integer (2));
    _methods.put ("ModificarUsuarioPwd", new java.lang.Integer (3));
    _methods.put ("ObtenerMisProyectos", new java.lang.Integer (4));
    _methods.put ("ObtenerMisTareas", new java.lang.Integer (5));
    _methods.put ("Crear", new java.lang.Integer (6));
    _methods.put ("Obtener", new java.lang.Integer (7));
    _methods.put ("Modificar", new java.lang.Integer (8));
    _methods.put ("Restaurar", new java.lang.Integer (9));
    _methods.put ("Eliminar", new java.lang.Integer (10));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // ExApp/Ex/Login
       {
         String user = in.read_string ();
         String pwd = in.read_string ();
         String $result[] = null;
         $result = this.Login (user, pwd);
         out = $rh.createReply();
         ExApp.vectorHelper.write (out, $result);
         break;
       }

       case 1:  // ExApp/Ex/ObtenerUsuarioPorID
       {
         int id = in.read_long ();
         byte estado = in.read_octet ();
         String $result[] = null;
         $result = this.ObtenerUsuarioPorID (id, estado);
         out = $rh.createReply();
         ExApp.vectorHelper.write (out, $result);
         break;
       }

       case 2:  // ExApp/Ex/ObtenerUsuarioPorTarea
       {
         int id = in.read_long ();
         String $result[][] = null;
         $result = this.ObtenerUsuarioPorTarea (id);
         out = $rh.createReply();
         ExApp.matrizHelper.write (out, $result);
         break;
       }

       case 3:  // ExApp/Ex/ModificarUsuarioPwd
       {
         int id = in.read_long ();
         String oldPwd = in.read_string ();
         String newPwd = in.read_string ();
         boolean $result = false;
         $result = this.ModificarUsuarioPwd (id, oldPwd, newPwd);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 4:  // ExApp/Ex/ObtenerMisProyectos
       {
         int id = in.read_long ();
         boolean admin = in.read_boolean ();
         String $result[][] = null;
         $result = this.ObtenerMisProyectos (id, admin);
         out = $rh.createReply();
         ExApp.matrizHelper.write (out, $result);
         break;
       }

       case 5:  // ExApp/Ex/ObtenerMisTareas
       {
         int id = in.read_long ();
         boolean admin = in.read_boolean ();
         String $result[][] = null;
         $result = this.ObtenerMisTareas (id, admin);
         out = $rh.createReply();
         ExApp.matrizHelper.write (out, $result);
         break;
       }

       case 6:  // ExApp/Ex/Crear
       {
         String datos[] = ExApp.vectorHelper.read (in);
         byte tabla = in.read_octet ();
         boolean $result = false;
         $result = this.Crear (datos, tabla);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 7:  // ExApp/Ex/Obtener
       {
         String busqueda = in.read_string ();
         byte estado = in.read_octet ();
         byte tabla = in.read_octet ();
         String $result[][] = null;
         $result = this.Obtener (busqueda, estado, tabla);
         out = $rh.createReply();
         ExApp.matrizHelper.write (out, $result);
         break;
       }

       case 8:  // ExApp/Ex/Modificar
       {
         int id = in.read_long ();
         String datos[] = ExApp.vectorHelper.read (in);
         byte tabla = in.read_octet ();
         boolean $result = false;
         $result = this.Modificar (id, datos, tabla);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 9:  // ExApp/Ex/Restaurar
       {
         int id = in.read_long ();
         byte tabla = in.read_octet ();
         boolean $result = false;
         $result = this.Restaurar (id, tabla);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 10:  // ExApp/Ex/Eliminar
       {
         int id = in.read_long ();
         boolean permanente = in.read_boolean ();
         byte tabla = in.read_octet ();
         boolean $result = false;
         $result = this.Eliminar (id, permanente, tabla);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:ExApp/Ex:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }


} // class _ExImplBase
